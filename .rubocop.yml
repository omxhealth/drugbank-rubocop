require:
  - rubocop-rspec
  - rubocop-rails
  - rubocop-capybara
  - rubocop-factory_bot

# Exclude entire directories/files from being linted.
AllCops:
  Exclude:
    - '**/*.slim'
    - 'lib/tasks/local.rake' # For running random stuff in dev.
    - 'db/' # schema and migrations

Layout/LineLength:
  Max: 120

Layout/SpaceAroundMethodCallOperator:
  Enabled: true

# Enforce either the table-style (aligned values) or normal style.
Layout/HashAlignment:
  EnforcedColonStyle:
    - key
    - table  

# Note: Different from Shopify Ruby Guide
Lint/RaiseException:
  Enabled: true

# Note: Different from Shopify Ruby Guide
Lint/StructNewOverride:
  Enabled: true

# There is lots of existing code using %i() etc.
# Note: Different from Shopify Ruby Guide
Style/PercentLiteralDelimiters:
  PreferredDelimiters:
    default: '()'
    '%i': '()'
    '%w': '()'
    '%s': '()'

# Don't auto-correct, leave it up to the developer. Sometimes it is clearer to explictly
# return nil.
Style/EmptyElse:
  AutoCorrect: false

# We prefer the compact style and saving the level of indentation
Style/ClassAndModuleChildren:
  Enabled: false
  
# Note: Different from Shopify Ruby Guide
Style/ExponentialNotation:
  Enabled: true

# Note: Different from Shopify Ruby Guide
Style/HashEachMethods:
  Enabled: true

# Note: Different from Shopify Ruby Guide
Style/HashTransformKeys:
  Enabled: true

# Note: Different from Shopify Ruby Guide
Style/HashTransformValues:
  Enabled: true

# Note: Different from Shopify Ruby Guide
Style/StringLiterals:
   EnforcedStyle: single_quotes

###
### RSpec Cops
###

# These rules just don't align with how we write specs
RSpec/ExampleLength:
  Enabled: false

RSpec/MultipleExpectations:
  Enabled: false

RSpec/InstanceVariable:
  Enabled: false

RSpec/BeforeAfterAll:
  Enabled: false

RSpec/SpecFilePathFormat:
  Enabled: false

RSpec/SpecFilePathSuffix:
  Enabled: false

# Maybe we're doing some unnecessary nesting, but it doesn't seem out of the ordinary for us to
# need a little more nesting. The default is 3. If we start wanting to bump it up higher than
# this, though, we may want to revisit what we're nesting for.
RSpec/NestedGroups:
  Max: 4

###
### Rails Cops
###

# We are smart enough to know when it's okay to skip model validations.
Rails/SkipsModelValidations:
  Enabled: false

# In our code, this seems to almost always be false positives.
# Also, rubocop format broke code autocorrecting this rule
Rails/DynamicFindBy:
  Enabled: false

# This suggestion comes up when using add_index in migrations, which is the default
# generated code. Although it looks like using `change_table do |t|` and then `t.index`
# calls in place of `add_index` would be equivalent, it's hard to find any evidence of
# this in practice. Given the lack of direction to avoid triggering this cop (at least
# when adding indexes) and the fact that rails generates it out of the box this way,
# keeping this rule in place only encourages us to leave a cop unaddressed. Silencing
# the cop won't prevent use of bulk operations, of course, and if they become more
# standard so that we're not triggering it with every new table migration we add, then
# we might want to take this out.
Rails/BulkChangeTable:
  Enabled: false

# Sometimes we want to direct our output to stdout via puts, instead of defaulting to the
# Rails logger. Don't auto-correct, leave it up to the developer.
Rails/Output:
  AutoCorrect: false
